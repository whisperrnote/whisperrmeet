import type { Models } from 'appwrite';

// This file is auto-generated by the Appwrite CLI. 
// You can regenerate it by running `appwrite types src/types`.

export enum Type {
    INSTANT = "instant",
    SCHEDULED = "scheduled",
    RECURRING = "recurring"
}

export enum Status {
    SCHEDULED = "scheduled",
    ACTIVE = "active",
    ENDED = "ended",
    CANCELLED = "cancelled"
}

export enum Role {
    HOST = "host",
    CO_HOST = "co-host",
    PARTICIPANT = "participant"
}

export enum Status {
    WAITING = "waiting",
    JOINED = "joined",
    LEFT = "left"
}

export enum Type {
    TEXT = "text",
    FILE = "file",
    SYSTEM = "system"
}

export enum Status {
    PROCESSING = "processing",
    READY = "ready",
    FAILED = "failed"
}

export type Users = Models.Row & {
    userId: string;
    displayName: string | null;
    email: string | null;
    avatarUrl: string | null;
    avatarFileId: string | null;
    preferences: string | null;
    createdAt: string | null;
    updatedAt: string | null;
}

export type Meetings = Models.Row & {
    meetingId: string;
    hostId: string;
    title: string | null;
    description: string | null;
    type: Type;
    status: Status;
    startTime: string | null;
    endTime: string | null;
    scheduledDuration: number;
    isRecording: boolean;
    recordingFileId: string | null;
    encryptionKey: string | null;
    maxParticipants: number;
    participantCount: number;
    settings: string | null;
    createdAt: string | null;
    updatedAt: string | null;
}

export type Participants = Models.Row & {
    participantId: string;
    meetingId: string;
    userId: string | null;
    displayName: string;
    isAnonymous: boolean;
    role: Role;
    status: Status;
    joinedAt: string | null;
    leftAt: string | null;
    connectionId: string | null;
    audioEnabled: boolean;
    videoEnabled: boolean;
    screenSharing: boolean;
}

export type ChatMessages = Models.Row & {
    messageId: string;
    meetingId: string;
    senderId: string;
    senderName: string;
    content: string;
    type: Type;
    fileId: string | null;
    timestamp: string | null;
    isEncrypted: boolean;
}

export type Recordings = Models.Row & {
    recordingId: string;
    meetingId: string;
    fileId: string;
    fileName: string;
    fileSize: number | null;
    duration: number | null;
    thumbnailFileId: string | null;
    status: Status;
    createdAt: string | null;
    expiresAt: string | null;
}

export type Polls = Models.Row & {
    pollId: string;
    meetingId: string;
    creatorId: string;
    question: string;
    options: string;
    votes: string | null;
    totalVotes: number;
    isActive: boolean;
    createdAt: string | null;
}

export type Reactions = Models.Row & {
    reactionId: string;
    meetingId: string;
    userId: string;
    userName: string | null;
    emoji: string;
    timestamp: string | null;
}
